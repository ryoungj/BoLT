dataset_path: hails/mmlu_no_train # a copy of `cais/mmlu` with no auxiliary_train split
validation_split: validation
test_split: test
output_type: generate_until
doc_to_text: "Question: {% if choices is defined%}{{question.strip()}}\n(A) {{choices[0]}} (B) {{choices[1]}} (C) {{choices[2]}} (D) {{choices[3]}}\nAnswer:<|START_OF_LATENT|><|PRIOR_PREFIX|>{% else %}{{ question.strip() }}\nAnswer:<|START_OF_LATENT|><|PRIOR_PREFIX|>{% endif %}"
target_delimiter: ""
doc_to_target: "{% if answer is defined%}{{['(A)', '(B)', '(C)', '(D)'][answer]}}{% else %}{{target}}{% endif %}"
num_fewshot: 4
fewshot_delimiter: "\n\n\n\n##Problem\n"
filter_list:
  - name: "strict-match"
    filter:
      - function: "regex"
        regex_pattern: "(?<=answer is )\\([A-Z]\\)"
      - function: "take_first"
  - name: "flexible-extract"
    filter:
      - function: "multi_choice_regex"
        group_select: -1
        ignore_case: true
        ignore_punctuation: true
        regex_pattern: "(\\([A-Z]\\))"
      - function: "take_first"
generation_kwargs:
  until:
    - "</s>"
    - 'Question:'
    - "<|START_OF_LATENT|>"
  do_sample: false
  temperature: 0.0
metric_list:
  - metric: exact_match
    aggregation: mean
    higher_is_better: true
    ignore_case: true
    ignore_punctuation: true
metadata:
  version: 2.0
dataset_kwargs:
  trust_remote_code: true
